[{"id":"c6874a44dc0c0a5139e52b9b2342d0cd","title":"在非gki内核中添加KernelSU支持","content":"一、前言​\t在Non-gki内核中添加KernelSU的前提得是编译好的内核能够正常开机（废话+1），所以本文也将会详细介绍安卓内核的编译过程以及在编译过程中可能遇到的情况.\n​\t写这个文章不是因为我技术有多好，只是因为我刚开始搞这个跟个**一样找不到路，所以现在稍微明白点了就写下来给想搞这个的看看，也是为了防止我自己以后忘了。。奶子不大好使记不住东西\n1. 环境要求一台Linux设备（虚拟机，Docker，WSL甚至是Terumx都是可以的），我这里以WSL2，Ubuntu 22.04.2 LTS为例\n一部可以正常使用的安卓手机（废话+2）\n可以让你连接到github和google的方法（你懂的§(￣▽￣)§）\n最后再带上你聪明的小脑袋瓜，粗发！\n2. 准备工作\n首先需要下载所需要的依赖，跟坨屎一样多，直接复制执行就好\n\n1sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev\n\n二、编译内核1. 下载适合自己手机的内核build​\t这个东西需要自己去Github找，一般为(android)_kernel_&lt;手机厂商&gt;_&lt;cpu代号&gt;\n123# 以一加8T为例，高通骁龙865代号为sm8250，那么内核仓库名就可能是android_kernel_oneplus_sm8250kernel_oneplus_sm8250\n\n我这里的例子是Handelinkernel-v2.6，我在氢的时候最喜欢的一个内核（同时也是最喜欢的一个版本）\n1\n\n\n\n","slug":"在非gki内核中添加KernelSU支持","date":"2023-07-27T04:36:38.000Z","categories_index":"","tags_index":"android","author_index":"zeroti"},{"id":"a40a3ffb2c480012223db04bb1d4e303","title":"Ubuntu升级glibc2.36","content":"\n查看现有版本\n\n  123456zeroti@zeroti_PC:~$ ldd --versionldd (GNU libc) 2.35Copyright (C) 2022 Free Software Foundation, Inc.This is free software; see the source for copying conditions.  There is NOwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.Written by Roland McGrath and Ulrich Drepper.\n\n\n下载指定版本的gblic：https://mirrors.aliyun.com/gnu/glibc/glibc-2.36.tar.gz\n\n解压到随意路径后进行编译\n\n\n  1234567wget https://mirrors.aliyun.com/gnu/glibc/glibc-2.36.tar.gztar -zxvf glibc-2.36.tar.gz\t\t#解压文件夹cd glibc-2.36\t#进入解压的路径sudo mkdir build &amp;&amp; cd build\t#新建build文件夹并进入sudo ../configure --prefix=/usr/local --disable-sanity-checks  #需要参数sudo make -j8\t\t#开始编译sudo make install\t#安装\n\n\n如果正常安装就完成了\n\n​\t删除旧的so.6\n​\t创建新的软连接\n\n如果报错Can’t open configuration file &#x2F;usr&#x2F;local&#x2F;etc&#x2F;ld.so.conf: No such file or directory就是缺少了必要的编译文件 ld.so.conf。通过 find 命令找到对应的文件位置。\n  123find / -name &quot;ld.so.conf&quot;cp /etc/ld.so.conf /usr/local/etc/make install\n\n","slug":"Ubuntu升级glibc2-36","date":"2023-03-23T11:54:45.000Z","categories_index":"","tags_index":"Linux","author_index":"zeroti"},{"id":"520af577a57dbb790673dc228ec27cb7","title":"Markdown基础语法","content":"Markdown学习标题12## 二级胞体### 三级标题\n\n\n\n字体hello world\n1**加粗**\n\nhello world\n1*斜体*\n\nhello world\n1***加粗斜体***\n\nhello world\n1~~划线~~\n\n\n\n引用\n\n\n\n\n\n\n\n\n引用一段文字\n1&gt; 引用\n\n\n\n分割线\n\n1---\n\n\n\n图片\n1![图片名](图片路径)\n\n\n\n超链接跳转bilibili\n1[文字](跳转链接)\n\n\n\n列表\nA\nB\nC\n\n\nA\nB\nC\n\n表格\n\n\n名字\n性别\n生日\n\n\n\n张三\n男\n2000.1.1\n\n\n代码1ctrl+shift+k\n\n","slug":"Markdown基础语法","date":"2023-03-22T15:41:53.000Z","categories_index":"","tags_index":"","author_index":"zeroti"},{"id":"86b8a8caf5a74cc5a5c80ec11d3cd6f2","title":"Docker基本命令","content":"帮助命令123docker version\t\t\t\t# 显示docker版本信息docker info\t\t\t\t\t# 显示docker系统信息，包括镜像和容器数量docker 命令 --help\t\t# 帮助命令\n\nDocker Docs address\n镜像命令docker images\n查看所有本地主机上的镜像\n\n1234567891011121314zeroti@zeroti_PC:~$ docker imagesREPOSITORY    TAG       IMAGE ID       CREATED        SIZEhello-world   latest    feb5d9fea6a5   7 months ago   13.3kB# 解释REPOSITORY\t镜像的仓库源TAG\t\t\t镜像的标签IMAGE ID\t镜像的idCREATED\t\t镜像的创建时间SIZE\t\t镜像的大小# 可选项  -a, --all             # 列出所有的镜像  -q, --quiet           # 只显示id\n\ndocker search\n搜索\n\n1234567zeroti@zeroti_PC:~$ docker search mysqlNAME                             DESCRIPTION                                     STARS     OFFICIAL   AUTOMATEDmysql                            MySQL is a widely used, open-source relation…   12491     [OK]mariadb                          MariaDB Server is a high performing open sou…   4808      [OK]# 可选项，通过收藏来过滤--filter=STARS=3000   # 搜索出来的镜像STARS大于3000\n\ndocker pull\n下载镜像\n\n12345678910111213141516171819202122232425262728293031323334353637383940# 下载镜像\tdocker pull &lt;镜像名&gt;[:tag]zeroti@zeroti_PC:~$ docker pull mysqlUsing default tag: latest\t# 如果不写 tag，默认是 latest 最新版本latest: Pulling from library/mysql4be315f6562f: Pull complete\t\t# 分层下载，docker image的核心，联合文件系统96e2eb237a1b: Pull complete8aa3ac85066b: Pull completeac7e524f6c89: Pull completef6a88631064f: Pull complete15bb3ec3ff50: Pull completeae65dc337dcb: Pull complete573c3c7fa18d: Pull complete9d10771b98b8: Pull complete3d8ef442614b: Pull complete7dc17a6cea26: Pull complete752752efdaea: Pull completeDigest: sha256:2dafe3f044f140ec6c07716d34f0b317b98f8e251435abd347951699f7aa3904Status: Downloaded newer image for mysql:latestdocker.io/library/mysql:latest\t# 真实地址# 两条命令等价docker pull mysql = docker.io/library/mysql:latest# 指定版本下载zeroti@zeroti_PC:~$ docker pull mysql:5.75.7: Pulling from library/mysql4be315f6562f: Already exists96e2eb237a1b: Already exists8aa3ac85066b: Already existsac7e524f6c89: Already existsf6a88631064f: Already exists15bb3ec3ff50: Already existsae65dc337dcb: Already existsa4c4c43adf52: Pull completec6cab33e8f91: Pull complete2e1c4f2c43f6: Pull complete2e5ee322af48: Pull completeDigest: sha256:e767595ba3408fbb2dda493be3594b9a148178df58325fafe8b0363662935624Status: Downloaded newer image for mysql:5.7docker.io/library/mysql:5.7\n\n\ndocker rmi\n删除镜像\n\n123zeroti@zeroti_PC:~$ docker rmi -f 镜像id\t# 删除指定镜像zeroti@zeroti_PC:~$ docker rmi -f 镜像id 镜像id 镜像id 镜像id\t# 删除多个镜像zeroti@zeroti_PC:~$ docker rmi -f $(docker images -aq)\t# 删除全部镜像\n\n\n\n容器命令说明：有了镜像才可以创建容器\n例：\n1docker pull centos\n\ndocker run\n运行容器\n\n12345678910111213141516171819202122docker run [可选参数] image# 参数说明--name=&quot;Name&quot;\t容器名字，用来区分容器：tomcat01，tomcat02-d\t\t\t\t后台方式运行-it\t\t\t\t使用交互方式运行，进入容器查看内容-p\t\t\t\t指定容器端口 -p 8080:8080\t-p ip:主机端口:容器端口\t-p 主机端口:容器端口 (常用)\t-p 容器端口\t容器端口-P(大写)\t\t   随机指定端口# 启动并进入容器zeroti@zeroti_PC:~$ docker run -it centos /bin/bash[root@fd69e0861f85 /]# ls\t# 查看容器内的centos，基础版本，很多命令不完善bin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var# 退出容器回到主机[root@9c45858d0c26 /]# exitexitzeroti@zeroti_PC:~$\n\ndocker ps\n查看运行的容器\n\n123456789101112131415161718\t# 列出当前正在运行的容器zeroti@zeroti_PC:~$ docker psCONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES-a\t# 列出当前正在运行的容器+历史运行过的容器zeroti@zeroti_PC:~$ docker ps -aCONTAINER ID   IMAGE          COMMAND       CREATED         STATUS                     PORTS     NAMES9c45858d0c26   centos         &quot;/bin/bash&quot;   3 minutes ago   Exited (0) 3 minutes ago             dazzling_karefd69e0861f85   centos         &quot;/bin/bash&quot;   2 hours ago     Exited (0) 2 hours ago               recursing_banachec075c5483d5   feb5d9fea6a5   &quot;/hello&quot;      41 hours ago    Exited (0) 41 hours ago              silly_burnell8e62f7b2c7cb   feb5d9fea6a5   &quot;/hello&quot;      44 hours ago    Exited (0) 44 hours ago              distracted_faraday-n=[个数]\t# 显示最近创建的容器zeroti@zeroti_PC:~$ docker ps -n=1CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS                      PORTS     NAMES9c45858d0c26   centos    &quot;/bin/bash&quot;   11 minutes ago   Exited (0) 11 minutes ago             dazzling_kare-q\t# 只显示容器id\n\n\n退出容器\n\n12exit\t# 直接退出并停止容器ctrl+p+q\t# 退出但不停止容器\n\ndocker rm\n删除容器\n\n123docker rm 容器id\t# 删除指定容器，不能删除正在运行的容器，若需要强制删除需要加 -fdocker rm -f $(docker ps -aq)\t# 删除所有容器docker ps -aq|xargs docker rm\t# 删除所有容器\n\n\n启动和停止容器的操作\n\n1234docker start 容器id\t# 启动容器docker restar 容器id\t# 重启容器docker stop 容器id\t# 停止当前正在运行的容器docker kill 容器id\t# 强制停止正在运行的容器\n\n常用其他命令后台启动1234567# 命令 docker run -d 镜像名 启动容器zeroti@zeroti_PC:~$ docker run -d centos# 问题: docker ps，发现容器停止运行了# 常见问题: docker 使用后台运行，就必须要有一个前台进程(docker f)# 容器启动后发现没有提供服务就会自己停止\n\n查看日志命令12345678910111213141516171819202122232425262728# 如果使用docker logs -tf --tail 容器id\t# 后没有日志# 自己编写一段shell脚本&quot;while true;do echo journal;sleep 1;done&quot;zeroti@zeroti_PC:~$ docker run -d centos /bin/bash -c &quot;while true;do echo journal;sleep 1;done&quot;9968fb4485966a803b8732372b0c7218dc78cbd7f2df51dc54c27b98615cc1d0zeroti@zeroti_PC:~$ docker psCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES9968fb448596   centos    &quot;/bin/bash -c &#x27;while…&quot;   17 seconds ago   Up 17 seconds             distracted_feistel# 显示日志-tf\t\t# 显示日志附带时间戳--tail number\t# 显示number行的日志# 显示指定行数的日志zeroti@zeroti_PC:~$ docker logs -tf --tail 10 9968fb4485962022-05-10T02:44:14.894897600Z journal2022-05-10T02:44:15.896720900Z journal2022-05-10T02:44:16.898505000Z journal2022-05-10T02:44:17.900718200Z journal2022-05-10T02:44:18.903980000Z journal2022-05-10T02:44:19.906051900Z journal2022-05-10T02:44:20.909209400Z journal2022-05-10T02:44:21.911071400Z journal2022-05-10T02:44:22.912874900Z journal2022-05-10T02:44:23.915469200Z journal\n\n\n\n查看容器中的进程信息1234zeroti@zeroti_PC:~$ docker top 9968fb448596UID                 PID                 PPID                C                   STIME               TTY   root                1412                1393                0                   02:42               ?root                1831                1412                0                   02:48               ?\n\n查看容器元数据123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213# 命令dokcer inspect 容器id# 测试zeroti@zeroti_PC:~$ docker inspect 9968fb448596[    &#123;        &quot;Id&quot;: &quot;9968fb4485966a803b8732372b0c7218dc78cbd7f2df51dc54c27b98615cc1d0&quot;,        &quot;Created&quot;: &quot;2022-05-10T02:42:07.0043628Z&quot;,        &quot;Path&quot;: &quot;/bin/bash&quot;,        &quot;Args&quot;: [            &quot;-c&quot;,            &quot;while true;do echo journal;sleep 1;done&quot;        ],        &quot;State&quot;: &#123;            &quot;Status&quot;: &quot;running&quot;,            &quot;Running&quot;: true,            &quot;Paused&quot;: false,            &quot;Restarting&quot;: false,            &quot;OOMKilled&quot;: false,            &quot;Dead&quot;: false,            &quot;Pid&quot;: 1412,            &quot;ExitCode&quot;: 0,            &quot;Error&quot;: &quot;&quot;,            &quot;StartedAt&quot;: &quot;2022-05-10T02:42:07.4785849Z&quot;,            &quot;FinishedAt&quot;: &quot;0001-01-01T00:00:00Z&quot;        &#125;,        &quot;Image&quot;: &quot;sha256:5d0da3dc976460b72c77d94c8a1ad043720b0416bfc16c52c45d4847e53fadb6&quot;,        &quot;ResolvConfPath&quot;: &quot;/var/lib/docker/containers/9968fb4485966a803b8732372b0c7218dc78cbd7f2df51dc54c27b98615cc1d0/resolv.conf&quot;,        &quot;HostnamePath&quot;: &quot;/var/lib/docker/containers/9968fb4485966a803b8732372b0c7218dc78cbd7f2df51dc54c27b98615cc1d0/hostname&quot;,        &quot;HostsPath&quot;: &quot;/var/lib/docker/containers/9968fb4485966a803b8732372b0c7218dc78cbd7f2df51dc54c27b98615cc1d0/hosts&quot;,        &quot;LogPath&quot;: &quot;/var/lib/docker/containers/9968fb4485966a803b8732372b0c7218dc78cbd7f2df51dc54c27b98615cc1d0/9968fb4485966a803b8732372b0c7218dc78cbd7f2df51dc54c27b98615cc1d0-json.log&quot;,        &quot;Name&quot;: &quot;/distracted_feistel&quot;,        &quot;RestartCount&quot;: 0,        &quot;Driver&quot;: &quot;overlay2&quot;,        &quot;Platform&quot;: &quot;linux&quot;,        &quot;MountLabel&quot;: &quot;&quot;,        &quot;ProcessLabel&quot;: &quot;&quot;,        &quot;AppArmorProfile&quot;: &quot;&quot;,        &quot;ExecIDs&quot;: null,        &quot;HostConfig&quot;: &#123;            &quot;Binds&quot;: null,            &quot;ContainerIDFile&quot;: &quot;&quot;,            &quot;LogConfig&quot;: &#123;                &quot;Type&quot;: &quot;json-file&quot;,                &quot;Config&quot;: &#123;&#125;            &#125;,            &quot;NetworkMode&quot;: &quot;default&quot;,            &quot;PortBindings&quot;: &#123;&#125;,            &quot;RestartPolicy&quot;: &#123;                &quot;Name&quot;: &quot;no&quot;,                &quot;MaximumRetryCount&quot;: 0            &#125;,            &quot;AutoRemove&quot;: false,            &quot;VolumeDriver&quot;: &quot;&quot;,            &quot;VolumesFrom&quot;: null,            &quot;CapAdd&quot;: null,            &quot;CapDrop&quot;: null,            &quot;CgroupnsMode&quot;: &quot;host&quot;,            &quot;Dns&quot;: [],            &quot;DnsOptions&quot;: [],            &quot;DnsSearch&quot;: [],            &quot;ExtraHosts&quot;: null,            &quot;GroupAdd&quot;: null,            &quot;IpcMode&quot;: &quot;private&quot;,            &quot;Cgroup&quot;: &quot;&quot;,            &quot;Links&quot;: null,            &quot;OomScoreAdj&quot;: 0,            &quot;PidMode&quot;: &quot;&quot;,            &quot;Privileged&quot;: false,            &quot;PublishAllPorts&quot;: false,            &quot;ReadonlyRootfs&quot;: false,            &quot;SecurityOpt&quot;: null,            &quot;UTSMode&quot;: &quot;&quot;,            &quot;UsernsMode&quot;: &quot;&quot;,            &quot;ShmSize&quot;: 67108864,            &quot;Runtime&quot;: &quot;runc&quot;,            &quot;ConsoleSize&quot;: [                0,                0            ],            &quot;Isolation&quot;: &quot;&quot;,            &quot;CpuShares&quot;: 0,            &quot;Memory&quot;: 0,            &quot;NanoCpus&quot;: 0,            &quot;CgroupParent&quot;: &quot;&quot;,            &quot;BlkioWeight&quot;: 0,            &quot;BlkioWeightDevice&quot;: [],            &quot;BlkioDeviceReadBps&quot;: null,            &quot;BlkioDeviceWriteBps&quot;: null,            &quot;BlkioDeviceReadIOps&quot;: null,            &quot;BlkioDeviceWriteIOps&quot;: null,            &quot;CpuPeriod&quot;: 0,            &quot;CpuQuota&quot;: 0,            &quot;CpuRealtimePeriod&quot;: 0,            &quot;CpuRealtimeRuntime&quot;: 0,            &quot;CpusetCpus&quot;: &quot;&quot;,            &quot;CpusetMems&quot;: &quot;&quot;,            &quot;Devices&quot;: [],            &quot;DeviceCgroupRules&quot;: null,            &quot;DeviceRequests&quot;: null,            &quot;KernelMemory&quot;: 0,            &quot;KernelMemoryTCP&quot;: 0,            &quot;MemoryReservation&quot;: 0,            &quot;MemorySwap&quot;: 0,            &quot;MemorySwappiness&quot;: null,            &quot;OomKillDisable&quot;: false,            &quot;PidsLimit&quot;: null,            &quot;Ulimits&quot;: null,            &quot;CpuCount&quot;: 0,            &quot;CpuPercent&quot;: 0,            &quot;IOMaximumIOps&quot;: 0,            &quot;IOMaximumBandwidth&quot;: 0,            &quot;MaskedPaths&quot;: [                &quot;/proc/asound&quot;,                &quot;/proc/acpi&quot;,                &quot;/proc/kcore&quot;,                &quot;/proc/keys&quot;,                &quot;/proc/latency_stats&quot;,                &quot;/proc/timer_list&quot;,                &quot;/proc/timer_stats&quot;,                &quot;/proc/sched_debug&quot;,                &quot;/proc/scsi&quot;,                &quot;/sys/firmware&quot;            ],            &quot;ReadonlyPaths&quot;: [                &quot;/proc/bus&quot;,                &quot;/proc/fs&quot;,                &quot;/proc/irq&quot;,                &quot;/proc/sys&quot;,                &quot;/proc/sysrq-trigger&quot;            ]        &#125;,        &quot;GraphDriver&quot;: &#123;            &quot;Data&quot;: &#123;                &quot;LowerDir&quot;: &quot;/var/lib/docker/overlay2/88bbb9c8b2656c6a8b6580f7538ba8b1ff3bf6bcd3e2edd6e0e5a27daca73d58-init/diff:/var/lib/docker/overlay2/09e4a53d9cdec08d015a731c06316d17523fc6faf41df2ac052bb75c56f91bce/diff&quot;,                &quot;MergedDir&quot;: &quot;/var/lib/docker/overlay2/88bbb9c8b2656c6a8b6580f7538ba8b1ff3bf6bcd3e2edd6e0e5a27daca73d58/merged&quot;,                &quot;UpperDir&quot;: &quot;/var/lib/docker/overlay2/88bbb9c8b2656c6a8b6580f7538ba8b1ff3bf6bcd3e2edd6e0e5a27daca73d58/diff&quot;,                &quot;WorkDir&quot;: &quot;/var/lib/docker/overlay2/88bbb9c8b2656c6a8b6580f7538ba8b1ff3bf6bcd3e2edd6e0e5a27daca73d58/work&quot;            &#125;,            &quot;Name&quot;: &quot;overlay2&quot;        &#125;,        &quot;Mounts&quot;: [],        &quot;Config&quot;: &#123;            &quot;Hostname&quot;: &quot;9968fb448596&quot;,            &quot;Domainname&quot;: &quot;&quot;,            &quot;User&quot;: &quot;&quot;,            &quot;AttachStdin&quot;: false,            &quot;AttachStdout&quot;: false,            &quot;AttachStderr&quot;: false,            &quot;Tty&quot;: false,            &quot;OpenStdin&quot;: false,            &quot;StdinOnce&quot;: false,            &quot;Env&quot;: [                &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;            ],            &quot;Cmd&quot;: [                &quot;/bin/bash&quot;,                &quot;-c&quot;,                &quot;while true;do echo journal;sleep 1;done&quot;            ],            &quot;Image&quot;: &quot;centos&quot;,            &quot;Volumes&quot;: null,            &quot;WorkingDir&quot;: &quot;&quot;,            &quot;Entrypoint&quot;: null,            &quot;OnBuild&quot;: null,            &quot;Labels&quot;: &#123;                &quot;desktop.docker.io/wsl-distro&quot;: &quot;Ubuntu&quot;,                &quot;org.label-schema.build-date&quot;: &quot;20210915&quot;,                &quot;org.label-schema.license&quot;: &quot;GPLv2&quot;,                &quot;org.label-schema.name&quot;: &quot;CentOS Base Image&quot;,                &quot;org.label-schema.schema-version&quot;: &quot;1.0&quot;,                &quot;org.label-schema.vendor&quot;: &quot;CentOS&quot;            &#125;        &#125;,        &quot;NetworkSettings&quot;: &#123;            &quot;Bridge&quot;: &quot;&quot;,            &quot;SandboxID&quot;: &quot;9209fcc1f8384614c3a5f3a00294059a8db152e0e150141d59dda6c646c666bf&quot;,            &quot;HairpinMode&quot;: false,            &quot;LinkLocalIPv6Address&quot;: &quot;&quot;,            &quot;LinkLocalIPv6PrefixLen&quot;: 0,            &quot;Ports&quot;: &#123;&#125;,            &quot;SandboxKey&quot;: &quot;/var/run/docker/netns/9209fcc1f838&quot;,            &quot;SecondaryIPAddresses&quot;: null,            &quot;SecondaryIPv6Addresses&quot;: null,            &quot;EndpointID&quot;: &quot;f13c8ddd000a8ff4e71d926f90a0be66d24bf60da6e983af1b38e4f2e57a6db3&quot;,            &quot;Gateway&quot;: &quot;172.17.0.1&quot;,            &quot;GlobalIPv6Address&quot;: &quot;&quot;,            &quot;GlobalIPv6PrefixLen&quot;: 0,            &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,            &quot;IPPrefixLen&quot;: 16,            &quot;IPv6Gateway&quot;: &quot;&quot;,            &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,            &quot;Networks&quot;: &#123;                &quot;bridge&quot;: &#123;                    &quot;IPAMConfig&quot;: null,                    &quot;Links&quot;: null,                    &quot;Aliases&quot;: null,                    &quot;NetworkID&quot;: &quot;8e2bba8950574fd42f9127fb1a66dbdc8e45d09b7a19acfd9d204304eb0d7942&quot;,                    &quot;EndpointID&quot;: &quot;f13c8ddd000a8ff4e71d926f90a0be66d24bf60da6e983af1b38e4f2e57a6db3&quot;,                    &quot;Gateway&quot;: &quot;172.17.0.1&quot;,                    &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,                    &quot;IPPrefixLen&quot;: 16,                    &quot;IPv6Gateway&quot;: &quot;&quot;,                    &quot;GlobalIPv6Address&quot;: &quot;&quot;,                    &quot;GlobalIPv6PrefixLen&quot;: 0,                    &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,                    &quot;DriverOpts&quot;: null                &#125;            &#125;        &#125;    &#125;]\n\n进入当前正在运行的命令12345678910111213141516171819202122232425262728# 容器通常以后台方式运行，需要进入容器修改配置# 命令docker exec -it 容器id bashshell# 测试zeroti@zeroti_PC:~$ docker psCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES9968fb448596   centos    &quot;/bin/bash -c &#x27;while…&quot;   20 minutes ago   Up 20 minutes             distracted_feistelzeroti@zeroti_PC:~$ docker exec -it 9968fb448596 /bin/bash[root@9968fb448596 /]# lsbin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var[root@9968fb448596 /]# ps -efUID        PID  PPID  C STIME TTY          TIME CMDroot         1     0  0 02:42 ?        00:00:00 /bin/bash -c while true;do echo journal;sleep 1;doneroot      1279     0  0 03:03 pts/0    00:00:00 /bin/bashroot      1326     1  0 03:03 ?        00:00:00 /usr/bin/coreutils --coreutils-prog-shebang=sleep /usr/bin/sleroot      1327  1279  0 03:03 pts/0    00:00:00 ps -ef# 方式二docker attach 容器id# 测试zeroti@zeroti_PC:~$ docker attach 9968fb448596当前正在执行的代码...# docker exec \t# 进入容器后开启一个新的终端，可以在里面操作（常用）# docker attach\t# 进入容器正在执行的终端，不会启动新的进程\n\n从容器内拷贝文件到主机上123456789101112131415161718192021222324docker cp 容器id:容器内路径 目的主机路径# 查看当前主机目录下zeroti@zeroti_PC:~$ cd /homezeroti@zeroti_PC:/home$ sudo mkdir test[sudo] password for zeroti:zeroti@zeroti_PC:/home$ lstest  zeroti# 进入容器zeroti@zeroti_PC:/home$ docker psCONTAINER ID   IMAGE     COMMAND       CREATED          STATUS          PORTS     NAMES03edb435a99a   centos    &quot;/bin/bash&quot;   26 seconds ago   Up 25 seconds             recursing_rosalindzeroti@zeroti_PC:/home$ docker attach 03edb435a99a[root@03edb435a99a /]# cd /home[root@03edb435a99a home]# ls[root@03edb435a99a home]# touch docekrtest[root@03edb435a99a home]# lsdocekrtest[root@03edb435a99a home]# exitexitzeroti@zeroti_PC:/home$ sudo docker cp 03edb435a99a:/home/docekrtest /homezeroti@zeroti_PC:/home$ lsdocekrtest  test  zeroti\n\n总结port  \t  # 查看映射端口对应的容器内部源端口pause\t  # 暂停容器ps        # 猎户容器列表pull      # 从docker镜像源服务器拉取指定镜像或者库镜像push      # 推送指定镜像或者库镜像至docker源服务器restart   # 重启运行的容器rm        # 移除一个或多个容器rmi       # 移除一个或多个镜像 （无容器使用该镜像才可删除，否则需要删除相关容器才可继续或 -f 强制删除）run       # 创建一个新的容器并运行一个命令save      # 保存一个镜像为一个 tar 包【对应 load】search    # 在 docker hub 中搜索镜像start     # 启动容器stop      # 停止容器tag       # 给源中镜像打标签top       # 查看容器中运行的进程信息unpause   # 取消暂停容器version   # 查看 docker版本号wait      # 截取容器停止时的退出状态值\n练习例一（Docker安装Nginx）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172# 1. 搜索镜像zeroti@zeroti_PC:~$ docker search nginxNAME                                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATEDnginx                                             Official build of Nginx.                        16876     [OK]# 2. 拉取镜像zeroti@zeroti_PC:~$ docker pull nginxUsing default tag: latestlatest: Pulling from library/nginx42c077c10790: Pull complete62c70f376f6a: Pull complete915cc9bd79c2: Pull complete75a963e94de0: Pull complete7b1fab684d70: Pull completedb24d06d5af4: Pull completeDigest: sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514Status: Downloaded newer image for nginx:latestdocker.io/library/nginx:latest# 3. 查看镜像zeroti@zeroti_PC:~$ docker imagesREPOSITORY    TAG       IMAGE ID       CREATED        SIZEnginx         latest    0e901e68141f   2 days ago     142MB# 以后台方式把nginx挂载到本地3344端口# -d\t后台运行# --name [容器名]\t给容器命名# -p [本地端口]:[nginx内部端口]zeroti@zeroti_PC:~$ docker run -d --name nginx01 -p 3344:80 nginx47f4f5cbbaffb6e385a53e8e9ed78a950abf9b014e24cb866f6b5531561efffc# 查看运行的镜像zeroti@zeroti_PC:~$ docker psCONTAINER ID   IMAGE     COMMAND                  CREATED              STATUS              PORTS                  NAMES47f4f5cbbaff   nginx     &quot;/docker-entrypoint.…&quot;   About a minute ago   Up About a minute   0.0.0.0:3344-&gt;80/tcp   nginx01# 查看本地3344端口映射的nginxzeroti@zeroti_PC:~$ curl localhost:3344&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Welcome to nginx!&lt;/title&gt;&lt;style&gt;html &#123; color-scheme: light dark; &#125;body &#123; width: 35em; margin: 0 auto;font-family: Tahoma, Verdana, Arial, sans-serif; &#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;&lt;p&gt;If you see this page, the nginx web server is successfully installed andworking. Further configuration is required.&lt;/p&gt;&lt;p&gt;For online documentation and support please refer to&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;Commercial support is available at&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;# 进入nginxzeroti@zeroti_PC:~$ docker exec -it nginx01 /bin/bashroot@47f4f5cbbaff:/# lsbin   dev                  docker-entrypoint.sh  home  lib64  mnt  proc  run   srv  tmp  varboot  docker-entrypoint.d  etc                   lib   media  opt  root  sbin  sys  usrroot@47f4f5cbbaff:/# whereis nginxnginx: /usr/sbin/nginx /usr/lib/nginx /etc/nginx /usr/share/nginxroot@47f4f5cbbaff:/# cd /etc/nginx/root@47f4f5cbbaff:/etc/nginx# lsconf.d  fastcgi_params  mime.types  modules  nginx.conf  scgi_params  uwsgi_params\n\n端口暴露的概念：\n\n例二（Docker安装tomcat）1234567891011121314151617181920212223# 1.官方的使用docker run -it --rm tomcat:9.0# --rm方式一般用来测试，用完之后就会自动删除zeroti@zeroti_PC:~$ docker run -it --rm tomcat:9.0Unable to find image &#x27;tomcat:9.0&#x27; locally9.0: Pulling from library/tomcate756f3fdd6a3: Pull completebf168a674899: Pull completee604223835cc: Pull complete6d5c91c4cd86: Pull complete5e20d165240e: Pull complete1334d60df9a8: Pull complete16c2728dcd90: Pull complete05288798d23d: Pull complete22cc5e0633cb: Pull complete0c572f1a581a: Pull completeDigest: sha256:c20ac4dab13ca6ecd9e29cba39a3c34bb2f155528133315b1773b08012912deb# 运行结束后使用docker ps发现找不到镜像（已被删除）zeroti@zeroti_PC:~$ docker ps -aCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS                     PORTS     NAMES47f4f5cbbaff   nginx     &quot;/docker-entrypoint.…&quot;   26 minutes ago   Exited (0) 9 minutes ago             nginx0103edb435a99a   centos    &quot;/bin/bash&quot;              3 weeks ago      Exited (0) 3 weeks ago               recursing_rosalind\n\n一般情况\n12345678910111213141516171819202122232425262728293031# 下载镜像zeroti@zeroti_PC:~$ docker pull tomcatlatest: Pulling from library/tomcate756f3fdd6a3: Already existsbf168a674899: Already existse604223835cc: Already exists6d5c91c4cd86: Already exists5e20d165240e: Already exists1334d60df9a8: Already exists16c2728dcd90: Already exists05288798d23d: Already existsc022dc2b2581: Pull completed86ac2f896ee: Pull completeDigest: sha256:b4e84cff017ff5202cb760ccb1373dd950158f926d6afb04bd5e9f7337291501Status: Downloaded newer image for tomcat:latestzeroti@zeroti_PC:~$ docker imagesREPOSITORY    TAG       IMAGE ID       CREATED        SIZEtomcat        latest    c795915cb678   2 days ago     680MB# 启动运行镜像zeroti@zeroti_PC:~$ docker run -d -p 3355:8080 --name tomcat01 tomcat1c7cce5adc2175a53744a041b82e78a4df388b9f0feaa9b9a6e5e8389b07dbd9# 测试访问没有问题,但报错404http://localhost:3355/# 进入容器zeroti@zeroti_PC:~$ docker exec -it tomcat01 /bin/bash# 发现问题：1.缺少linux命令，2. 缺少webapps# 镜像原因，默认下载最小镜像（剔除所有非必要，只能保证最小环境运行）\n\n思考：以后部署项目，每次进入容器非常麻烦，在容器外放置路径映像到内部\n","slug":"Docker","date":"2023-03-21T08:13:08.000Z","categories_index":"","tags_index":"学习笔记","author_index":"zeroti"}]